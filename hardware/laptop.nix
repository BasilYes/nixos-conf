# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports =
    [ (modulesPath + "/installer/scan/not-detected.nix")
    ];

  boot.initrd.availableKernelModules = [ "nvme" "xhci_pci" "uas" "sd_mod" ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [
		"kvm-amd"
		"snd_soc_es8316"
		"snd_acp3x_pcm_dma"
		"snd_acp3x_i2s"
		"snd_pci_acp3x"
		"snd_soc_acp3x_es8336_mach"
	];
  boot.kernelPackages = pkgs.linuxPackages_zen;
  boot.kernelParams = [
    "SND_SOC_AMD_ACP3x=1"
    "SND_SOC_AMD_ACP3x_ES8336_MACH=1"
    "SND_SOC_ACPI=1"
    "SND_SOC_ES8316=1"
  ];
	boot.blacklistedKernelModules = [
		"snd_acp3x_rn"
		"snd_pci_acp5x"
		"snd_rn_pci_acp3x"
	];
  boot.extraModulePackages = [ ];

  fileSystems."/" =
    { device = "/dev/disk/by-uuid/00350e3c-6e2c-44c7-8b4d-e3ff00f2631c";
      fsType = "ext4";
    };

  fileSystems."/boot/efi" =
    { device = "/dev/disk/by-uuid/FC39-8445";
      fsType = "vfat";
    };
  
  fileSystems."/mnt/Data" =
    { device = "/dev/disk/by-uuid/AC4ACAF74ACABCF8";
      fsType = "ntfs";
    };

  swapDevices = [ ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlp1s0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.amd.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
